# This makefile was generated by autochaos 0.2.0. Please do not
# tamper with it unless you are very certain about what you are doing.

ALL_ARGUMENTS = --install-prefix /mnt/chaos 

PREFIX = /mnt/chaos
PACKAGE = iso

# Compiler flags.

CFLAGS = -Wall -W -Wshadow -Wpointer-arith -Waggregate-return \
-Wstrict-prototypes -Wredundant-decls -Winline -Wmissing-prototypes \
-Werror -Wcast-align -Wbad-function-cast -Wmissing-noreturns -Wsign-compare \
-Wmissing-declarations -pipe \
-Wnested-externs -O3 -fno-builtin -funsigned-char -g $(EXTRA_CFLAGS) $(DEFINES)

INCLUDES = \
-I.. \
-I. -I$(PREFIX)/data/programming/c/headers

ALL_OBJECTS = \
./abort.o \
./abs.o \
./div.o \
./ldiv.o \
./malloc.o \
./memchr.o \
./memcmp.o \
./memcpy.o \
./memset.o \
./strcat.o \
./strchr.o \
./strcmp.o \
./strcpy.o \
./strlen.o \
./strncmp.o \
./strrchr.o \
./strtol.o \
./strtoul.o

STATIC_LIBRARY_PATH = $(PREFIX)/data/programming/libraries/static

# Ideally, this would be -lwhatever, but we have not started patching
# the GNU tools yet...

LIBS = 

OBJECTS =  \
abort.o \
abs.o \
div.o \
ldiv.o \
malloc.o \
memchr.o \
memcmp.o \
memcpy.o \
memset.o \
strcat.o \
strchr.o \
strcmp.o \
strcpy.o \
strlen.o \
strncmp.o \
strrchr.o \
strtol.o \
strtoul.o


HEADERS =  \
ctype.h \
errno.h \
fcntl.h \
features.h \
math.h \
signal.h \
stdio.h \
stdlib.h \
string.h \
time.h \
unistd.h


SOURCES =  \
abort.c \
abs.c \
div.c \
ldiv.c \
malloc.c \
memchr.S \
memcmp.S \
memcpy.S \
memset.S \
strcat.S \
strchr.S \
strcmp.S \
strcpy.S \
strlen.S \
strncmp.S \
strrchr.S \
strtol.c \
strtoul.c

HEADER_PATH = $(PREFIX)/data/programming/c/headers/$(PACKAGE)/.

# TODO: Those should be overridable.

CC = gcc
NASM = nasm
AR = ar
RANLIB = ranlib
GZIP = gzip -f

%.o: %.c
	@echo Compiling $<...
	@$(CC) -o $(@) $(CFLAGS) $(INCLUDES) $(DEFS) -c $<
	@$(CC) -M $< $(CFLAGS) $(INCLUDES) $(DEFS) > $(*F).dep

%.o: %.S
	@echo Compiling $<...
	@$(CC) -o $(@) $(CFLAGS) $(INCLUDES) $(DEFS) -c $<
	@$(CC) -M $< $(CFLAGS) $(INCLUDES) $(DEFS) > $(*F).dep

%.o: %.asm
	$(NASM) -o $(@) $< -f elf

.PHONY: splash all clean install package-source

all: splash makefile library_iso.a

clean: makefile
	rm -f library_iso.a
	rm -f $(OBJECTS)
	rm -f *.dep
	-$(MAKE) clean-local
makefile: configure
	@./configure

splash:
	@echo -e "\n  Compiling library: iso...\n"

configure: autochaos.rules
	@autochaos


LDFLAGS = $(PREFIX)/data/programming/c/startup/startup.o \
-nostdlib -Wl,-T,$(PREFIX)/data/programming/linker/chaos.ld -lgcc $(EXTRA_LDFLAGS)

library_iso.a: $(OBJECTS)
	@echo "Creating library..."
	@$(AR) cru $(@) $(OBJECTS)
	@$(RANLIB) $(@)

install: all
	mkdir -p $(PREFIX)/data/programming/libraries/static
	cp library_iso.a $(PREFIX)/data/programming/libraries/static
	mkdir -p $(PREFIX)/data/programming/c/headers/$(PACKAGE)
	for header in $(HEADERS) ; do cp $$header $(PREFIX)/data/programming/c/headers/$(PACKAGE) ; done

package-source:
	mkdir -p /root/Development/chaos/libraries/iso/package-source/.
	-cp -f autochaos.rules changelog configure README AUTHORS TODO INSTALL /root/Development/chaos/libraries/iso/package-source/.
	-cp -f makefile.template $(EXTRA_FILES) /root/Development/chaos/libraries/iso/package-source/.
	for header in $(HEADERS) ; do cp $$header /root/Development/chaos/libraries/iso/package-source/. ; done
	for source in $(SOURCES) ; do cp $$source /root/Development/chaos/libraries/iso/package-source/. ; done
package-check: package-source
	     cd package-source && ./configure $(ALL_ARGUMENTS) && $(MAKE) && $(MAKE) clean
	     find package-source -name makefile -exec rm {} ';'
	     rm package-source/config.h
package: package-check
	rm -rf iso-0.0.1
	mv package-source iso-0.0.1
	tar cvIf iso-0.0.1.tar.bz2 iso-0.0.1
	     
-include abort.dep
-include abs.dep
-include div.dep
-include ldiv.dep
-include malloc.dep
-include memchr.dep
-include memcmp.dep
-include memcpy.dep
-include memset.dep
-include strcat.dep
-include strchr.dep
-include strcmp.dep
-include strcpy.dep
-include strlen.dep
-include strncmp.dep
-include strrchr.dep
-include strtol.dep
-include strtoul.dep

EXTRA_CFLAGS=-Wno-aggregate-return

.PHONY: cross-install

cross-install: all
	mkdir -p /usr/local/i386-chaosdev-storm-chaos/lib
	cp library_iso.a /usr/local/i386-chaosdev-storm-chaos/lib/libc.a
	mkdir -p /usr/local/i386-chaosdev-storm-chaos/include
	for header in $(HEADERS) ; do cp $$header /usr/local/i386-chaosdev-storm-chaos/include ; done
	cp ../startup.c .
	$(MAKE) startup.o
	cp startup.o /usr/local/lib/gcc-lib/i386-chaosdev-storm-chaos/2.95.2/crt1.o
