#! /usr/bin/perl -w

# Abstract: Script for configuring this package.

# Copyright 2000 chaos development. This script is in the public domain.

# Please note that this script was automatically generated by
# autochaos 0.2.0. It should not be modified. Do the changes you
# want in autochaos instead.

use strict;
use POSIX;

my $default_root = "/";
my $chaos_root = undef;
my @libraries = ();
my @headers = ();
my @sources = ();
my @objects = ();
my @deps = ();
my $MAKEFILE;
my $TEMPLATE;
my $root_dir = getcwd ();
my %options = 
(
);

my $install_prefix_flag = 0;

foreach my $argument (@ARGV)
{
  if ($install_prefix_flag eq 1)
  {
    $default_root = $argument;
    $install_prefix_flag = 0;
  }
  else
  {
    if ($argument eq '--install-prefix')
    {
      $install_prefix_flag = 1;
    }
    elsif ($argument =~ m/--enable-.*$/)
    {
      (my $option) = ($argument =~ m/--enable-(.*)$/);

      if ($options{$option})
      {
        $options{$option} = 'TRUE';
      }
      else
      {
        print "Unrecognised command line option.\n";
        exit 1;
      }
    }
    elsif ($argument =~ m/--disable-.*$/)
    {
      (my $option) = ($argument =~ m/--disable-(.*)$/);

      if ($options{$option})
      {
        $options{$option} = 'FALSE';
      }
      else
      {
        print "Unrecognised command line option.\n";
        exit 1;
      }
    }
    else
    {
      print "Unrecognised command line option.\n";
      exit 1;
    }
  }
}

if ($install_prefix_flag eq 1)
{
  print "Malformed --install-prefix command option. Value missing.\n";
  exit 1;
}

print "\n  Configuring program: serialtest...\n\n";

print ("Detecting chaos root...\n");

print "Trying default root ($default_root)... ";

if (-d "$default_root/system/kernel")
{
  print "found.\n";
  $chaos_root = $default_root;
}
else
{
  print "not found.\n";

  print "Trying /mnt/chaos... ";

  if (-d "/mnt/chaos/system/kernel")
  {
    print "found.\n";
    $chaos_root = "/mnt/chaos";
  }

  unless ($chaos_root)
  {
    $chaos_root = "/tmp/chaos";
    print "not found.\nFalling back to $chaos_root.\n";
  }
}

