
test:     file format elf32-i386
test
architecture: i386, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080486d0

Program Header:
    PHDR off    0x00000034 vaddr 0x08048034 paddr 0x08048034 align 2**2
         filesz 0x000000c0 memsz 0x000000c0 flags r-x
  INTERP off    0x000000f4 vaddr 0x080480f4 paddr 0x080480f4 align 2**0
         filesz 0x00000013 memsz 0x00000013 flags r--
    LOAD off    0x00000000 vaddr 0x08048000 paddr 0x08048000 align 2**12
         filesz 0x000008c0 memsz 0x000008c0 flags r-x
    LOAD off    0x000008c0 vaddr 0x080498c0 paddr 0x080498c0 align 2**12
         filesz 0x000001b4 memsz 0x000001dc flags rw-
 DYNAMIC off    0x00000950 vaddr 0x08049950 paddr 0x08049950 align 2**2
         filesz 0x000000e0 memsz 0x000000e0 flags rw-
    NOTE off    0x00000108 vaddr 0x08048108 paddr 0x08048108 align 2**2
         filesz 0x00000020 memsz 0x00000020 flags r--

Dynamic Section:
  NEEDED      libstdc++.so.3
  NEEDED      libm.so.6
  NEEDED      libgcc_s.so.1
  NEEDED      libc.so.6
  INIT        0x80485f8
  FINI        0x804889c
  HASH        0x8048128
  STRTAB      0x8048368
  SYMTAB      0x80481d8
  STRSZ       0x1b3
  SYMENT      0x10
  DEBUG       0x0
  PLTGOT      0x8049a40
  PLTRELSZ    0x48
  PLTREL      0x11
  JMPREL      0x80485b0
  REL         0x80485a0
  RELSZ       0x10
  RELENT      0x8
  VERNEED     0x8048550
  VERNEEDNUM  0x2
  VERSYM      0x804851c

Version References:
  required from libc.so.6:
    0x0d696910 0x00 04 GLIBC_2.0
  required from libgcc_s.so.1:
    0x0b792650 0x00 03 GCC_3.0
    0x0d696910 0x00 02 GLIBC_2.0

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .interp       00000013  080480f4  080480f4  000000f4  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  08048108  08048108  00000108  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .hash         000000b0  08048128  08048128  00000128  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .dynsym       00000190  080481d8  080481d8  000001d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynstr       000001b3  08048368  08048368  00000368  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .gnu.version  00000032  0804851c  0804851c  0000051c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version_r 00000050  08048550  08048550  00000550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .rel.dyn      00000010  080485a0  080485a0  000005a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rel.plt      00000048  080485b0  080485b0  000005b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .init         0000002f  080485f8  080485f8  000005f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .plt          000000a0  08048628  08048628  00000628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .text         000001cc  080486d0  080486d0  000006d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .fini         0000001a  0804889c  0804889c  0000089c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .rodata       00000008  080488b8  080488b8  000008b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .data         00000014  080498c0  080498c0  000008c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 15 .eh_frame     00000054  080498d4  080498d4  000008d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 16 .gcc_except_table 00000028  08049928  08049928  00000928  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 17 .dynamic      000000e0  08049950  08049950  00000950  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 18 .ctors        00000008  08049a30  08049a30  00000a30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 19 .dtors        00000008  08049a38  08049a38  00000a38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 20 .got          00000034  08049a40  08049a40  00000a40  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 21 .bss          00000028  08049a74  08049a74  00000a74  2**3
                  ALLOC
 22 .stab         00000918  00000000  00000000  00000a74  2**2
                  CONTENTS, READONLY, DEBUGGING
 23 .stabstr      0000167e  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
 24 .comment      000000ed  00000000  00000000  00002a0a  2**0
                  CONTENTS, READONLY
 25 .note         0000003c  00000000  00000000  00002af7  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
080480f4 l    d  .interp	00000000              
08048108 l    d  .note.ABI-tag	00000000              
08048128 l    d  .hash	00000000              
080481d8 l    d  .dynsym	00000000              
08048368 l    d  .dynstr	00000000              
0804851c l    d  .gnu.version	00000000              
08048550 l    d  .gnu.version_r	00000000              
080485a0 l    d  .rel.dyn	00000000              
080485b0 l    d  .rel.plt	00000000              
080485f8 l    d  .init	00000000              
08048628 l    d  .plt	00000000              
080486d0 l    d  .text	00000000              
0804889c l    d  .fini	00000000              
080488b8 l    d  .rodata	00000000              
080498c0 l    d  .data	00000000              
080498d4 l    d  .eh_frame	00000000              
08049928 l    d  .gcc_except_table	00000000              
08049950 l    d  .dynamic	00000000              
08049a30 l    d  .ctors	00000000              
08049a38 l    d  .dtors	00000000              
08049a40 l    d  .got	00000000              
08049a74 l    d  .bss	00000000              
00000000 l    d  .stab	00000000              
00000000 l    d  .stabstr	00000000              
00000000 l    d  .comment	00000000              
00000000 l    d  .note	00000000              
00000000 l    d  *ABS*	00000000              
00000000 l    d  *ABS*	00000000              
00000000 l    d  *ABS*	00000000              
00000000 l    df *ABS*	00000000              init.c
00000000 l    df *ABS*	00000000              initfini.c
080486f4 l       .text	00000000              gcc2_compiled.
00000000 l    df *ABS*	00000000              crtstuff.c
080498c8 l     O .data	00000000              p.0
08049a38 l     O .dtors	00000000              __DTOR_LIST__
08049a80 l     O .bss	00000004              completed.1
08048700 l     F .text	00000000              __do_global_dtors_aux
080498d4 l     O .eh_frame	00000000              __EH_FRAME_BEGIN__
08048770 l     F .text	00000000              fini_dummy
08049a84 l     O .bss	00000018              object.2
08048780 l     F .text	00000000              frame_dummy
080487d0 l     F .text	00000000              init_dummy
080498cc l     O .data	00000000              force_to_data
08049a30 l     O .ctors	00000000              __CTOR_LIST__
00000000 l    df *ABS*	00000000              crtstuff.c
08048840 l     F .text	00000000              __do_global_ctors_aux
08049a34 l     O .ctors	00000000              __CTOR_END__
08048890 l     F .text	00000000              init_dummy
080498d0 l     O .data	00000000              force_to_data
08049a3c l     O .dtors	00000000              __DTOR_END__
08049924 l     O .eh_frame	00000000              __FRAME_END__
00000000 l    df *ABS*	00000000              initfini.c
0804889c l       .text	00000000              gcc2_compiled.
00000000 l    df *ABS*	00000000              test.cpp
08049950 g     O *ABS*	00000000              _DYNAMIC
080488b6 g     O *ABS*	00000000              _etext
00000000  w    F *UND*	0000002a              __register_frame_info@@GLIBC_2.0
00000000         *UND*	00000004              _fp_hw
00000000  w      *UND*	00000000              __cxa_finalize
080498c4 g     O .data	00000000              __dso_handle
08048638  w    F *UND*	000000c5              __deregister_frame_info_bases@@GCC_3.0
08048648       F *UND*	00000056              __cxa_end_catch
080485f8 g     F .init	00000000              _init
08048658       F *UND*	00000452              __gxx_personality_v0
00000000  w    F *UND*	00000022              __deregister_frame_info@@GLIBC_2.0
080486d0 g       .text	00000000              _start
08048668       F *UND*	00000070              __cxa_throw
08049a78  w    O .bss	00000008              _ZTIi
08049a74 g     O *ABS*	00000000              __bss_start
080487e0 g     F .text	0000005a              main
08048678  w    F *UND*	00000050              __register_frame_info_bases@@GCC_3.0
08048688       F *UND*	000000f1              __libc_start_main@@GLIBC_2.0
080498c0  w      .data	00000000              data_start
0804889c g     F .fini	00000000              _fini
08048698       F *UND*	0000005b              __cxa_begin_catch
080486a8       F *UND*	00000091              __cxa_allocate_exception
08049a74 g     O *ABS*	00000000              _edata
08049a40 g     O *ABS*	00000000              _GLOBAL_OFFSET_TABLE_
08049a9c g     O *ABS*	00000000              _end
00000000       F *UND*	000000c7              _Unwind_Resume@@GCC_3.0
080488bc g     O .rodata	00000004              _IO_stdin_used
080498c0 g       .data	00000000              __data_start
00000000  w      *UND*	00000000              __gmon_start__


Disassembly of section .interp:

080480f4 <.interp>:
 80480f4:	2f                   	das    
 80480f5:	6c                   	insb   (%dx),%es:(%edi)
 80480f6:	69 62 2f 6c 64 2d 6c 	imul   $0x6c2d646c,0x2f(%edx),%esp
 80480fd:	69 6e 75 78 2e 73 6f 	imul   $0x6f732e78,0x75(%esi),%ebp
 8048104:	2e 32 00             	xor    %cs:(%eax),%al
Disassembly of section .note.ABI-tag:

08048108 <.note.ABI-tag>:
 8048108:	04 00                	add    $0x0,%al
 804810a:	00 00                	add    %al,(%eax)
 804810c:	10 00                	adc    %al,(%eax)
 804810e:	00 00                	add    %al,(%eax)
 8048110:	01 00                	add    %eax,(%eax)
 8048112:	00 00                	add    %al,(%eax)
 8048114:	47                   	inc    %edi
 8048115:	4e                   	dec    %esi
 8048116:	55                   	push   %ebp
 8048117:	00 00                	add    %al,(%eax)
 8048119:	00 00                	add    %al,(%eax)
 804811b:	00 02                	add    %al,(%edx)
	...
Disassembly of section .hash:

08048128 <.hash>:
 8048128:	11 00                	adc    %eax,(%eax)
 804812a:	00 00                	add    %al,(%eax)
 804812c:	19 00                	sbb    %eax,(%eax)
 804812e:	00 00                	add    %al,(%eax)
 8048130:	00 00                	add    %al,(%eax)
 8048132:	00 00                	add    %al,(%eax)
 8048134:	13 00                	adc    (%eax),%eax
 8048136:	00 00                	add    %al,(%eax)
 8048138:	14 00                	adc    $0x0,%al
 804813a:	00 00                	add    %al,(%eax)
 804813c:	06                   	push   %es
 804813d:	00 00                	add    %al,(%eax)
 804813f:	00 09                	add    %cl,(%ecx)
 8048141:	00 00                	add    %al,(%eax)
 8048143:	00 00                	add    %al,(%eax)
 8048145:	00 00                	add    %al,(%eax)
 8048147:	00 16                	add    %dl,(%esi)
 8048149:	00 00                	add    %al,(%eax)
 804814b:	00 11                	add    %dl,(%ecx)
 804814d:	00 00                	add    %al,(%eax)
 804814f:	00 10                	add    %dl,(%eax)
 8048151:	00 00                	add    %al,(%eax)
 8048153:	00 08                	add    %cl,(%eax)
 8048155:	00 00                	add    %al,(%eax)
 8048157:	00 00                	add    %al,(%eax)
 8048159:	00 00                	add    %al,(%eax)
 804815b:	00 0d 00 00 00 00    	add    %cl,0x0
 8048161:	00 00                	add    %al,(%eax)
 8048163:	00 17                	add    %dl,(%edi)
 8048165:	00 00                	add    %al,(%eax)
 8048167:	00 0b                	add    %cl,(%ebx)
 8048169:	00 00                	add    %al,(%eax)
 804816b:	00 18                	add    %bl,(%eax)
	...
 8048179:	00 00                	add    %al,(%eax)
 804817b:	00 01                	add    %al,(%ecx)
	...
 804818d:	00 00                	add    %al,(%eax)
 804818f:	00 04 00             	add    %al,(%eax,%eax,1)
 8048192:	00 00                	add    %al,(%eax)
 8048194:	03 00                	add    (%eax),%eax
 8048196:	00 00                	add    %al,(%eax)
 8048198:	02 00                	add    (%eax),%al
	...
 80481a2:	00 00                	add    %al,(%eax)
 80481a4:	0a 00                	or     (%eax),%al
 80481a6:	00 00                	add    %al,(%eax)
 80481a8:	00 00                	add    %al,(%eax)
 80481aa:	00 00                	add    %al,(%eax)
 80481ac:	07                   	pop    %es
	...
 80481b5:	00 00                	add    %al,(%eax)
 80481b7:	00 0f                	add    %cl,(%edi)
 80481b9:	00 00                	add    %al,(%eax)
 80481bb:	00 05 00 00 00 0e    	add    %al,0xe000000
 80481c1:	00 00                	add    %al,(%eax)
 80481c3:	00 0c 00             	add    %cl,(%eax,%eax,1)
 80481c6:	00 00                	add    %al,(%eax)
 80481c8:	12 00                	adc    (%eax),%al
 80481ca:	00 00                	add    %al,(%eax)
 80481cc:	00 00                	add    %al,(%eax)
 80481ce:	00 00                	add    %al,(%eax)
 80481d0:	15 00 00 00 00       	adc    $0x0,%eax
 80481d5:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dynsym:

080481d8 <.dynsym>:
	...
 80481e8:	10 00                	adc    %al,(%eax)
 80481ea:	00 00                	add    %al,(%eax)
 80481ec:	50                   	push   %eax
 80481ed:	99                   	cltd   
 80481ee:	04 08                	add    $0x8,%al
 80481f0:	00 00                	add    %al,(%eax)
 80481f2:	00 00                	add    %al,(%eax)
 80481f4:	11 00                	adc    %eax,(%eax)
 80481f6:	f1                   	(bad)  
 80481f7:	ff 82 01 00 00 b6    	incl   0xb6000001(%edx)
 80481fd:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8048200:	00 00                	add    %al,(%eax)
 8048202:	00 00                	add    %al,(%eax)
 8048204:	11 00                	adc    %eax,(%eax)
 8048206:	f1                   	(bad)  
 8048207:	ff 41 01             	incl   0x1(%ecx)
 804820a:	00 00                	add    %al,(%eax)
 804820c:	00 00                	add    %al,(%eax)
 804820e:	00 00                	add    %al,(%eax)
 8048210:	2a 00                	sub    (%eax),%al
 8048212:	00 00                	add    %al,(%eax)
 8048214:	22 00                	and    (%eax),%al
 8048216:	00 00                	add    %al,(%eax)
 8048218:	57                   	push   %edi
	...
 8048221:	00 00                	add    %al,(%eax)
 8048223:	00 20                	add    %ah,(%eax)
 8048225:	00 00                	add    %al,(%eax)
 8048227:	00 4a 00             	add    %cl,0x0(%edx)
 804822a:	00 00                	add    %al,(%eax)
 804822c:	c4 98 04 08 00 00    	les    0x804(%eax),%ebx
 8048232:	00 00                	add    %al,(%eax)
 8048234:	11 00                	adc    %eax,(%eax)
 8048236:	0f 00 23             	verr   (%ebx)
 8048239:	01 00                	add    %eax,(%eax)
 804823b:	00 38                	add    %bh,(%eax)
 804823d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048240:	c5 00                	lds    (%eax),%eax
 8048242:	00 00                	add    %al,(%eax)
 8048244:	22 00                	and    (%eax),%al
 8048246:	00 00                	add    %al,(%eax)
 8048248:	b2 00                	mov    $0x0,%dl
 804824a:	00 00                	add    %al,(%eax)
 804824c:	48                   	dec    %eax
 804824d:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8048250:	56                   	push   %esi
 8048251:	00 00                	add    %al,(%eax)
 8048253:	00 12                	add    %dl,(%edx)
 8048255:	00 00                	add    %al,(%eax)
 8048257:	00 3e                	add    %bh,(%esi)
 8048259:	00 00                	add    %al,(%eax)
 804825b:	00 f8                	add    %bh,%al
 804825d:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8048260:	00 00                	add    %al,(%eax)
 8048262:	00 00                	add    %al,(%eax)
 8048264:	12 00                	adc    (%eax),%al
 8048266:	0a 00                	or     (%eax),%al
 8048268:	66                   	data16
 8048269:	00 00                	add    %al,(%eax)
 804826b:	00 58 86             	add    %bl,0xffffff86(%eax)
 804826e:	04 08                	add    $0x8,%al
 8048270:	52                   	push   %edx
 8048271:	04 00                	add    $0x0,%al
 8048273:	00 12                	add    %dl,(%edx)
 8048275:	00 00                	add    %al,(%eax)
 8048277:	00 fc                	add    %bh,%ah
 8048279:	00 00                	add    %al,(%eax)
 804827b:	00 00                	add    %al,(%eax)
 804827d:	00 00                	add    %al,(%eax)
 804827f:	00 22                	add    %ah,(%edx)
 8048281:	00 00                	add    %al,(%eax)
 8048283:	00 22                	add    %ah,(%edx)
 8048285:	00 00                	add    %al,(%eax)
 8048287:	00 94 00 00 00 68 86 	add    %dl,0x86680000(%eax,%eax,1)
 804828e:	04 08                	add    $0x8,%al
 8048290:	70 00                	jo     8048292 <_init-0x366>
 8048292:	00 00                	add    %al,(%eax)
 8048294:	12 00                	adc    (%eax),%al
 8048296:	00 00                	add    %al,(%eax)
 8048298:	c2 00 00             	ret    $0x0
 804829b:	00 78 9a             	add    %bh,0xffffff9a(%eax)
 804829e:	04 08                	add    $0x8,%al
 80482a0:	08 00                	or     %al,(%eax)
 80482a2:	00 00                	add    %al,(%eax)
 80482a4:	21 00                	and    %eax,(%eax)
 80482a6:	16                   	push   %ss
 80482a7:	00 90 01 00 00 74    	add    %dl,0x74000001(%eax)
 80482ad:	9a 04 08 00 00 00 00 	lcall  $0x0,$0x804
 80482b4:	11 00                	adc    %eax,(%eax)
 80482b6:	f1                   	(bad)  
 80482b7:	ff e0                	jmp    *%eax
 80482b9:	00 00                	add    %al,(%eax)
 80482bb:	00 78 86             	add    %bh,0xffffff86(%eax)
 80482be:	04 08                	add    $0x8,%al
 80482c0:	50                   	push   %eax
 80482c1:	00 00                	add    %al,(%eax)
 80482c3:	00 22                	add    %ah,(%edx)
 80482c5:	00 00                	add    %al,(%eax)
 80482c7:	00 70 01             	add    %dh,0x1(%eax)
 80482ca:	00 00                	add    %al,(%eax)
 80482cc:	88 86 04 08 f1 00    	mov    %al,0xf10804(%esi)
 80482d2:	00 00                	add    %al,(%eax)
 80482d4:	12 00                	adc    (%eax),%al
 80482d6:	00 00                	add    %al,(%eax)
 80482d8:	44                   	inc    %esp
 80482d9:	00 00                	add    %al,(%eax)
 80482db:	00 9c 88 04 08 00 00 	add    %bl,0x804(%eax,%ecx,4)
 80482e2:	00 00                	add    %al,(%eax)
 80482e4:	12 00                	adc    (%eax),%al
 80482e6:	0d 00 a0 00 00       	or     $0xa000,%eax
 80482eb:	00 98 86 04 08 5b    	add    %bl,0x5b080486(%eax)
 80482f1:	00 00                	add    %al,(%eax)
 80482f3:	00 12                	add    %dl,(%edx)
 80482f5:	00 00                	add    %al,(%eax)
 80482f7:	00 7b 00             	add    %bh,0x0(%ebx)
 80482fa:	00 00                	add    %al,(%eax)
 80482fc:	a8 86                	test   $0x86,%al
 80482fe:	04 08                	add    $0x8,%al
 8048300:	91                   	xchg   %eax,%ecx
 8048301:	00 00                	add    %al,(%eax)
 8048303:	00 12                	add    %dl,(%edx)
 8048305:	00 00                	add    %al,(%eax)
 8048307:	00 89 01 00 00 74    	add    %cl,0x74000001(%ecx)
 804830d:	9a 04 08 00 00 00 00 	lcall  $0x0,$0x804
 8048314:	11 00                	adc    %eax,(%eax)
 8048316:	f1                   	(bad)  
 8048317:	ff 19                	lcall  *(%ecx)
 8048319:	00 00                	add    %al,(%eax)
 804831b:	00 40 9a             	add    %al,0xffffff9a(%eax)
 804831e:	04 08                	add    $0x8,%al
 8048320:	00 00                	add    %al,(%eax)
 8048322:	00 00                	add    %al,(%eax)
 8048324:	11 00                	adc    %eax,(%eax)
 8048326:	f1                   	(bad)  
 8048327:	ff 9c 01 00 00 9c 9a 	lcall  *0x9a9c0000(%ecx,%eax,1)
 804832e:	04 08                	add    $0x8,%al
 8048330:	00 00                	add    %al,(%eax)
 8048332:	00 00                	add    %al,(%eax)
 8048334:	11 00                	adc    %eax,(%eax)
 8048336:	f1                   	(bad)  
 8048337:	ff 14 01             	call   *(%ecx,%eax,1)
 804833a:	00 00                	add    %al,(%eax)
 804833c:	00 00                	add    %al,(%eax)
 804833e:	00 00                	add    %al,(%eax)
 8048340:	c7 00 00 00 12 00    	movl   $0x120000,(%eax)
 8048346:	00 00                	add    %al,(%eax)
 8048348:	61                   	popa   
 8048349:	01 00                	add    %eax,(%eax)
 804834b:	00 bc 88 04 08 04 00 	add    %bh,0x40804(%eax,%ecx,4)
 8048352:	00 00                	add    %al,(%eax)
 8048354:	11 00                	adc    %eax,(%eax)
 8048356:	0e                   	push   %cs
 8048357:	00 2f                	add    %ch,(%edi)
	...
 8048361:	00 00                	add    %al,(%eax)
 8048363:	00 20                	add    %ah,(%eax)
 8048365:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dynstr:

08048368 <.dynstr>:
 8048368:	00 6c 69 62          	add    %ch,0x62(%ecx,%ebp,2)
 804836c:	73 74                	jae    80483e2 <_init-0x216>
 804836e:	64 63 2b             	arpl   %bp,%fs:(%ebx)
 8048371:	2b 2e                	sub    (%esi),%ebp
 8048373:	73 6f                	jae    80483e4 <_init-0x214>
 8048375:	2e 33 00             	xor    %cs:(%eax),%eax
 8048378:	5f                   	pop    %edi
 8048379:	44                   	inc    %esp
 804837a:	59                   	pop    %ecx
 804837b:	4e                   	dec    %esi
 804837c:	41                   	inc    %ecx
 804837d:	4d                   	dec    %ebp
 804837e:	49                   	dec    %ecx
 804837f:	43                   	inc    %ebx
 8048380:	00 5f 47             	add    %bl,0x47(%edi)
 8048383:	4c                   	dec    %esp
 8048384:	4f                   	dec    %edi
 8048385:	42                   	inc    %edx
 8048386:	41                   	inc    %ecx
 8048387:	4c                   	dec    %esp
 8048388:	5f                   	pop    %edi
 8048389:	4f                   	dec    %edi
 804838a:	46                   	inc    %esi
 804838b:	46                   	inc    %esi
 804838c:	53                   	push   %ebx
 804838d:	45                   	inc    %ebp
 804838e:	54                   	push   %esp
 804838f:	5f                   	pop    %edi
 8048390:	54                   	push   %esp
 8048391:	41                   	inc    %ecx
 8048392:	42                   	inc    %edx
 8048393:	4c                   	dec    %esp
 8048394:	45                   	inc    %ebp
 8048395:	5f                   	pop    %edi
 8048396:	00 5f 5f             	add    %bl,0x5f(%edi)
 8048399:	67 6d                	addr16 insl (%dx),%es:(%di)
 804839b:	6f                   	outsl  %ds:(%esi),(%dx)
 804839c:	6e                   	outsb  %ds:(%esi),(%dx)
 804839d:	5f                   	pop    %edi
 804839e:	73 74                	jae    8048414 <_init-0x1e4>
 80483a0:	61                   	popa   
 80483a1:	72 74                	jb     8048417 <_init-0x1e1>
 80483a3:	5f                   	pop    %edi
 80483a4:	5f                   	pop    %edi
 80483a5:	00 5f 69             	add    %bl,0x69(%edi)
 80483a8:	6e                   	outsb  %ds:(%esi),(%dx)
 80483a9:	69 74 00 5f 66 69 6e 	imul   $0x696e6966,0x5f(%eax,%eax,1),%esi
 80483b0:	69 
 80483b1:	00 5f 5f             	add    %bl,0x5f(%edi)
 80483b4:	64                   	fs
 80483b5:	73 6f                	jae    8048426 <_init-0x1d2>
 80483b7:	5f                   	pop    %edi
 80483b8:	68 61 6e 64 6c       	push   $0x6c646e61
 80483bd:	65 00 5f 5f          	add    %bl,%gs:0x5f(%edi)
 80483c1:	63 78 61             	arpl   %di,0x61(%eax)
 80483c4:	5f                   	pop    %edi
 80483c5:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%esi),%bp
 80483cb:	7a 65                	jp     8048432 <_init-0x1c6>
 80483cd:	00 5f 5f             	add    %bl,0x5f(%edi)
 80483d0:	67 78 78             	addr16 js 804844b <_init-0x1ad>
 80483d3:	5f                   	pop    %edi
 80483d4:	70 65                	jo     804843b <_init-0x1bd>
 80483d6:	72 73                	jb     804844b <_init-0x1ad>
 80483d8:	6f                   	outsl  %ds:(%esi),(%dx)
 80483d9:	6e                   	outsb  %ds:(%esi),(%dx)
 80483da:	61                   	popa   
 80483db:	6c                   	insb   (%dx),%es:(%edi)
 80483dc:	69 74 79 5f 76 30 00 	imul   $0x5f003076,0x5f(%ecx,%edi,2),%esi
 80483e3:	5f 
 80483e4:	5f                   	pop    %edi
 80483e5:	63 78 61             	arpl   %di,0x61(%eax)
 80483e8:	5f                   	pop    %edi
 80483e9:	61                   	popa   
 80483ea:	6c                   	insb   (%dx),%es:(%edi)
 80483eb:	6c                   	insb   (%dx),%es:(%edi)
 80483ec:	6f                   	outsl  %ds:(%esi),(%dx)
 80483ed:	63 61 74             	arpl   %sp,0x74(%ecx)
 80483f0:	65                   	gs
 80483f1:	5f                   	pop    %edi
 80483f2:	65                   	gs
 80483f3:	78 63                	js     8048458 <_init-0x1a0>
 80483f5:	65                   	gs
 80483f6:	70 74                	jo     804846c <_init-0x18c>
 80483f8:	69 6f 6e 00 5f 5f 63 	imul   $0x635f5f00,0x6e(%edi),%ebp
 80483ff:	78 61                	js     8048462 <_init-0x196>
 8048401:	5f                   	pop    %edi
 8048402:	74 68                	je     804846c <_init-0x18c>
 8048404:	72 6f                	jb     8048475 <_init-0x183>
 8048406:	77 00                	ja     8048408 <_init-0x1f0>
 8048408:	5f                   	pop    %edi
 8048409:	5f                   	pop    %edi
 804840a:	63 78 61             	arpl   %di,0x61(%eax)
 804840d:	5f                   	pop    %edi
 804840e:	62 65 67             	bound  %esp,0x67(%ebp)
 8048411:	69 6e 5f 63 61 74 63 	imul   $0x63746163,0x5f(%esi),%ebp
 8048418:	68 00 5f 5f 63       	push   $0x635f5f00
 804841d:	78 61                	js     8048480 <_init-0x178>
 804841f:	5f                   	pop    %edi
 8048420:	65 6e                	outsb  %gs:(%esi),(%dx)
 8048422:	64                   	fs
 8048423:	5f                   	pop    %edi
 8048424:	63 61 74             	arpl   %sp,0x74(%ecx)
 8048427:	63 68 00             	arpl   %bp,0x0(%eax)
 804842a:	5f                   	pop    %edi
 804842b:	5a                   	pop    %edx
 804842c:	54                   	push   %esp
 804842d:	49                   	dec    %ecx
 804842e:	69 00 6c 69 62 6d    	imul   $0x6d62696c,(%eax),%eax
 8048434:	2e 73 6f             	jae,pn 80484a6 <_init-0x152>
 8048437:	2e 36 00 6c 69 62    	add    %ch,%cs:%ss:0x62(%ecx,%ebp,2)
 804843d:	67 63 63 5f          	addr16 arpl %sp,95(%bp,%di)
 8048441:	73 2e                	jae    8048471 <_init-0x187>
 8048443:	73 6f                	jae    80484b4 <_init-0x144>
 8048445:	2e 31 00             	xor    %eax,%cs:(%eax)
 8048448:	5f                   	pop    %edi
 8048449:	5f                   	pop    %edi
 804844a:	72 65                	jb     80484b1 <_init-0x147>
 804844c:	67 69 73 74 65 72 5f 	addr16 imul $0x665f7265,116(%bp,%di),%esi
 8048453:	66 
 8048454:	72 61                	jb     80484b7 <_init-0x141>
 8048456:	6d                   	insl   (%dx),%es:(%edi)
 8048457:	65                   	gs
 8048458:	5f                   	pop    %edi
 8048459:	69 6e 66 6f 5f 62 61 	imul   $0x61625f6f,0x66(%esi),%ebp
 8048460:	73 65                	jae    80484c7 <_init-0x131>
 8048462:	73 00                	jae    8048464 <_init-0x194>
 8048464:	5f                   	pop    %edi
 8048465:	5f                   	pop    %edi
 8048466:	64                   	fs
 8048467:	65                   	gs
 8048468:	72 65                	jb     80484cf <_init-0x129>
 804846a:	67 69 73 74 65 72 5f 	addr16 imul $0x665f7265,116(%bp,%di),%esi
 8048471:	66 
 8048472:	72 61                	jb     80484d5 <_init-0x123>
 8048474:	6d                   	insl   (%dx),%es:(%edi)
 8048475:	65                   	gs
 8048476:	5f                   	pop    %edi
 8048477:	69 6e 66 6f 00 5f 55 	imul   $0x555f006f,0x66(%esi),%ebp
 804847e:	6e                   	outsb  %ds:(%esi),(%dx)
 804847f:	77 69                	ja     80484ea <_init-0x10e>
 8048481:	6e                   	outsb  %ds:(%esi),(%dx)
 8048482:	64                   	fs
 8048483:	5f                   	pop    %edi
 8048484:	52                   	push   %edx
 8048485:	65                   	gs
 8048486:	73 75                	jae    80484fd <_init-0xfb>
 8048488:	6d                   	insl   (%dx),%es:(%edi)
 8048489:	65 00 5f 5f          	add    %bl,%gs:0x5f(%edi)
 804848d:	64                   	fs
 804848e:	65                   	gs
 804848f:	72 65                	jb     80484f6 <_init-0x102>
 8048491:	67 69 73 74 65 72 5f 	addr16 imul $0x665f7265,116(%bp,%di),%esi
 8048498:	66 
 8048499:	72 61                	jb     80484fc <_init-0xfc>
 804849b:	6d                   	insl   (%dx),%es:(%edi)
 804849c:	65                   	gs
 804849d:	5f                   	pop    %edi
 804849e:	69 6e 66 6f 5f 62 61 	imul   $0x61625f6f,0x66(%esi),%ebp
 80484a5:	73 65                	jae    804850c <_init-0xec>
 80484a7:	73 00                	jae    80484a9 <_init-0x14f>
 80484a9:	5f                   	pop    %edi
 80484aa:	5f                   	pop    %edi
 80484ab:	72 65                	jb     8048512 <_init-0xe6>
 80484ad:	67 69 73 74 65 72 5f 	addr16 imul $0x665f7265,116(%bp,%di),%esi
 80484b4:	66 
 80484b5:	72 61                	jb     8048518 <_init-0xe0>
 80484b7:	6d                   	insl   (%dx),%es:(%edi)
 80484b8:	65                   	gs
 80484b9:	5f                   	pop    %edi
 80484ba:	69 6e 66 6f 00 6c 69 	imul   $0x696c006f,0x66(%esi),%ebp
 80484c1:	62 63 2e             	bound  %esp,0x2e(%ebx)
 80484c4:	73 6f                	jae    8048535 <_init-0xc3>
 80484c6:	2e 36 00 5f 49       	add    %bl,%cs:%ss:0x49(%edi)
 80484cb:	4f                   	dec    %edi
 80484cc:	5f                   	pop    %edi
 80484cd:	73 74                	jae    8048543 <_init-0xb5>
 80484cf:	64 69 6e 5f 75 73 65 	imul   $0x64657375,%fs:0x5f(%esi),%ebp
 80484d6:	64 
 80484d7:	00 5f 5f             	add    %bl,0x5f(%edi)
 80484da:	6c                   	insb   (%dx),%es:(%edi)
 80484db:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%edx),%esp
 80484e2:	72 74                	jb     8048558 <_init-0xa0>
 80484e4:	5f                   	pop    %edi
 80484e5:	6d                   	insl   (%dx),%es:(%edi)
 80484e6:	61                   	popa   
 80484e7:	69 6e 00 5f 65 74 65 	imul   $0x6574655f,0x0(%esi),%ebp
 80484ee:	78 74                	js     8048564 <_init-0x94>
 80484f0:	00 5f 65             	add    %bl,0x65(%edi)
 80484f3:	64                   	fs
 80484f4:	61                   	popa   
 80484f5:	74 61                	je     8048558 <_init-0xa0>
 80484f7:	00 5f 5f             	add    %bl,0x5f(%edi)
 80484fa:	62 73 73             	bound  %esi,0x73(%ebx)
 80484fd:	5f                   	pop    %edi
 80484fe:	73 74                	jae    8048574 <_init-0x84>
 8048500:	61                   	popa   
 8048501:	72 74                	jb     8048577 <_init-0x81>
 8048503:	00 5f 65             	add    %bl,0x65(%edi)
 8048506:	6e                   	outsb  %ds:(%esi),(%dx)
 8048507:	64 00 47 4c          	add    %al,%fs:0x4c(%edi)
 804850b:	49                   	dec    %ecx
 804850c:	42                   	inc    %edx
 804850d:	43                   	inc    %ebx
 804850e:	5f                   	pop    %edi
 804850f:	32 2e                	xor    (%esi),%ch
 8048511:	30 00                	xor    %al,(%eax)
 8048513:	47                   	inc    %edi
 8048514:	43                   	inc    %ebx
 8048515:	43                   	inc    %ebx
 8048516:	5f                   	pop    %edi
 8048517:	33 2e                	xor    (%esi),%ebp
 8048519:	30 00                	xor    %al,(%eax)
Disassembly of section .gnu.version:

0804851c <.gnu.version>:
 804851c:	00 00                	add    %al,(%eax)
 804851e:	01 00                	add    %eax,(%eax)
 8048520:	01 00                	add    %eax,(%eax)
 8048522:	02 00                	add    (%eax),%al
 8048524:	00 00                	add    %al,(%eax)
 8048526:	01 00                	add    %eax,(%eax)
 8048528:	03 00                	add    (%eax),%eax
 804852a:	00 00                	add    %al,(%eax)
 804852c:	01 00                	add    %eax,(%eax)
 804852e:	00 00                	add    %al,(%eax)
 8048530:	02 00                	add    (%eax),%al
 8048532:	00 00                	add    %al,(%eax)
 8048534:	00 00                	add    %al,(%eax)
 8048536:	01 00                	add    %eax,(%eax)
 8048538:	03 00                	add    (%eax),%eax
 804853a:	04 00                	add    $0x0,%al
 804853c:	01 00                	add    %eax,(%eax)
 804853e:	00 00                	add    %al,(%eax)
 8048540:	00 00                	add    %al,(%eax)
 8048542:	01 00                	add    %eax,(%eax)
 8048544:	01 00                	add    %eax,(%eax)
 8048546:	01 00                	add    %eax,(%eax)
 8048548:	03 00                	add    (%eax),%eax
 804854a:	01 00                	add    %eax,(%eax)
	...
Disassembly of section .gnu.version_r:

08048550 <.gnu.version_r>:
 8048550:	01 00                	add    %eax,(%eax)
 8048552:	01 00                	add    %eax,(%eax)
 8048554:	57                   	push   %edi
 8048555:	01 00                	add    %eax,(%eax)
 8048557:	00 10                	add    %dl,(%eax)
 8048559:	00 00                	add    %al,(%eax)
 804855b:	00 20                	add    %ah,(%eax)
 804855d:	00 00                	add    %al,(%eax)
 804855f:	00 10                	add    %dl,(%eax)
 8048561:	69 69 0d 00 00 04 00 	imul   $0x40000,0xd(%ecx),%ebp
 8048568:	a1 01 00 00 00       	mov    0x1,%eax
 804856d:	00 00                	add    %al,(%eax)
 804856f:	00 01                	add    %al,(%ecx)
 8048571:	00 02                	add    %al,(%edx)
 8048573:	00 d2                	add    %dl,%dl
 8048575:	00 00                	add    %al,(%eax)
 8048577:	00 10                	add    %dl,(%eax)
 8048579:	00 00                	add    %al,(%eax)
 804857b:	00 00                	add    %al,(%eax)
 804857d:	00 00                	add    %al,(%eax)
 804857f:	00 50 26             	add    %dl,0x26(%eax)
 8048582:	79 0b                	jns    804858f <_init-0x69>
 8048584:	00 00                	add    %al,(%eax)
 8048586:	03 00                	add    (%eax),%eax
 8048588:	ab                   	stos   %eax,%es:(%edi)
 8048589:	01 00                	add    %eax,(%eax)
 804858b:	00 10                	add    %dl,(%eax)
 804858d:	00 00                	add    %al,(%eax)
 804858f:	00 10                	add    %dl,(%eax)
 8048591:	69 69 0d 00 00 02 00 	imul   $0x20000,0xd(%ecx),%ebp
 8048598:	a1 01 00 00 00       	mov    0x1,%eax
 804859d:	00 00                	add    %al,(%eax)
	...
Disassembly of section .rel.dyn:

080485a0 <.rel.dyn>:
 80485a0:	70 9a                	jo     804853c <_init-0xbc>
 80485a2:	04 08                	add    $0x8,%al
 80485a4:	06                   	push   %es
 80485a5:	18 00                	sbb    %al,(%eax)
 80485a7:	00 78 9a             	add    %bh,0xffffff9a(%eax)
 80485aa:	04 08                	add    $0x8,%al
 80485ac:	05                   	.byte 0x5
 80485ad:	0c 00                	or     $0x0,%al
	...
Disassembly of section .rel.plt:

080485b0 <.rel.plt>:
 80485b0:	4c                   	dec    %esp
 80485b1:	9a 04 08 07 06 00 00 	lcall  $0x0,$0x6070804
 80485b8:	50                   	push   %eax
 80485b9:	9a 04 08 07 07 00 00 	lcall  $0x0,$0x7070804
 80485c0:	54                   	push   %esp
 80485c1:	9a 04 08 07 09 00 00 	lcall  $0x0,$0x9070804
 80485c8:	58                   	pop    %eax
 80485c9:	9a 04 08 07 0b 00 00 	lcall  $0x0,$0xb070804
 80485d0:	5c                   	pop    %esp
 80485d1:	9a 04 08 07 0e 00 00 	lcall  $0x0,$0xe070804
 80485d8:	60                   	pusha  
 80485d9:	9a 04 08 07 0f 00 00 	lcall  $0x0,$0xf070804
 80485e0:	64                   	fs
 80485e1:	9a 04 08 07 11 00 00 	lcall  $0x0,$0x11070804
 80485e8:	68 9a 04 08 07       	push   $0x708049a
 80485ed:	12 00                	adc    (%eax),%al
 80485ef:	00 6c 9a 04          	add    %ch,0x4(%edx,%ebx,4)
 80485f3:	08 07                	or     %al,(%edi)
 80485f5:	18 00                	sbb    %al,(%eax)
	...
Disassembly of section .init:

080485f8 <_init>:
 80485f8:	55                   	push   %ebp
 80485f9:	89 e5                	mov    %esp,%ebp
 80485fb:	53                   	push   %ebx
 80485fc:	e8 00 00 00 00       	call   8048601 <_init+0x9>
 8048601:	5b                   	pop    %ebx
 8048602:	81 c3 3f 14 00 00    	add    $0x143f,%ebx
 8048608:	83 bb 30 00 00 00 00 	cmpl   $0x0,0x30(%ebx)
 804860f:	74 05                	je     8048616 <_init+0x1e>
 8048611:	e8 a2 00 00 00       	call   80486b8 <_init+0xc0>
 8048616:	89 f6                	mov    %esi,%esi
 8048618:	e8 63 01 00 00       	call   8048780 <frame_dummy>
 804861d:	e8 1e 02 00 00       	call   8048840 <__do_global_ctors_aux>
 8048622:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 8048625:	c9                   	leave  
 8048626:	c3                   	ret    
Disassembly of section .plt:

08048628 <.plt>:
 8048628:	ff 35 44 9a 04 08    	pushl  0x8049a44
 804862e:	ff 25 48 9a 04 08    	jmp    *0x8049a48
 8048634:	00 00                	add    %al,(%eax)
 8048636:	00 00                	add    %al,(%eax)
 8048638:	ff 25 4c 9a 04 08    	jmp    *0x8049a4c
 804863e:	68 00 00 00 00       	push   $0x0
 8048643:	e9 e0 ff ff ff       	jmp    8048628 <_init+0x30>
 8048648:	ff 25 50 9a 04 08    	jmp    *0x8049a50
 804864e:	68 08 00 00 00       	push   $0x8
 8048653:	e9 d0 ff ff ff       	jmp    8048628 <_init+0x30>
 8048658:	ff 25 54 9a 04 08    	jmp    *0x8049a54
 804865e:	68 10 00 00 00       	push   $0x10
 8048663:	e9 c0 ff ff ff       	jmp    8048628 <_init+0x30>
 8048668:	ff 25 58 9a 04 08    	jmp    *0x8049a58
 804866e:	68 18 00 00 00       	push   $0x18
 8048673:	e9 b0 ff ff ff       	jmp    8048628 <_init+0x30>
 8048678:	ff 25 5c 9a 04 08    	jmp    *0x8049a5c
 804867e:	68 20 00 00 00       	push   $0x20
 8048683:	e9 a0 ff ff ff       	jmp    8048628 <_init+0x30>
 8048688:	ff 25 60 9a 04 08    	jmp    *0x8049a60
 804868e:	68 28 00 00 00       	push   $0x28
 8048693:	e9 90 ff ff ff       	jmp    8048628 <_init+0x30>
 8048698:	ff 25 64 9a 04 08    	jmp    *0x8049a64
 804869e:	68 30 00 00 00       	push   $0x30
 80486a3:	e9 80 ff ff ff       	jmp    8048628 <_init+0x30>
 80486a8:	ff 25 68 9a 04 08    	jmp    *0x8049a68
 80486ae:	68 38 00 00 00       	push   $0x38
 80486b3:	e9 70 ff ff ff       	jmp    8048628 <_init+0x30>
 80486b8:	ff 25 6c 9a 04 08    	jmp    *0x8049a6c
 80486be:	68 40 00 00 00       	push   $0x40
 80486c3:	e9 60 ff ff ff       	jmp    8048628 <_init+0x30>
Disassembly of section .text:

080486d0 <_start>:
 80486d0:	31 ed                	xor    %ebp,%ebp
 80486d2:	5e                   	pop    %esi
 80486d3:	89 e1                	mov    %esp,%ecx
 80486d5:	83 e4 f8             	and    $0xfffffff8,%esp
 80486d8:	50                   	push   %eax
 80486d9:	54                   	push   %esp
 80486da:	52                   	push   %edx
 80486db:	68 9c 88 04 08       	push   $0x804889c
 80486e0:	68 f8 85 04 08       	push   $0x80485f8
 80486e5:	51                   	push   %ecx
 80486e6:	56                   	push   %esi
 80486e7:	68 e0 87 04 08       	push   $0x80487e0
 80486ec:	e8 97 ff ff ff       	call   8048688 <_init+0x90>
 80486f1:	f4                   	hlt    
 80486f2:	90                   	nop    
 80486f3:	90                   	nop    

080486f4 <gcc2_compiled.>:
 80486f4:	90                   	nop    
 80486f5:	90                   	nop    
 80486f6:	90                   	nop    
 80486f7:	90                   	nop    
 80486f8:	90                   	nop    
 80486f9:	90                   	nop    
 80486fa:	90                   	nop    
 80486fb:	90                   	nop    
 80486fc:	90                   	nop    
 80486fd:	90                   	nop    
 80486fe:	90                   	nop    
 80486ff:	90                   	nop    

08048700 <__do_global_dtors_aux>:
 8048700:	55                   	push   %ebp
 8048701:	89 e5                	mov    %esp,%ebp
 8048703:	83 ec 08             	sub    $0x8,%esp
 8048706:	83 3d 80 9a 04 08 00 	cmpl   $0x0,0x8049a80
 804870d:	74 02                	je     8048711 <__do_global_dtors_aux+0x11>
 804870f:	eb 52                	jmp    8048763 <__do_global_dtors_aux+0x63>
 8048711:	90                   	nop    
 8048712:	8d b4 26 00 00 00 00 	lea    0x0(%esi,1),%esi
 8048719:	8d bc 27 00 00 00 00 	lea    0x0(%edi,1),%edi
 8048720:	a1 c8 98 04 08       	mov    0x80498c8,%eax
 8048725:	8b 00                	mov    (%eax),%eax
 8048727:	89 45 fc             	mov    %eax,0xfffffffc(%ebp)
 804872a:	85 c0                	test   %eax,%eax
 804872c:	75 02                	jne    8048730 <__do_global_dtors_aux+0x30>
 804872e:	eb 10                	jmp    8048740 <__do_global_dtors_aux+0x40>
 8048730:	83 05 c8 98 04 08 04 	addl   $0x4,0x80498c8
 8048737:	ff 55 fc             	call   *0xfffffffc(%ebp)
 804873a:	eb e4                	jmp    8048720 <__do_global_dtors_aux+0x20>
 804873c:	8d 74 26 00          	lea    0x0(%esi,1),%esi
 8048740:	b8 38 86 04 08       	mov    $0x8048638,%eax
 8048745:	85 c0                	test   %eax,%eax
 8048747:	74 10                	je     8048759 <__do_global_dtors_aux+0x59>
 8048749:	83 ec 0c             	sub    $0xc,%esp
 804874c:	68 d4 98 04 08       	push   $0x80498d4
 8048751:	e8 e2 fe ff ff       	call   8048638 <_init+0x40>
 8048756:	83 c4 10             	add    $0x10,%esp
 8048759:	c7 05 80 9a 04 08 01 	movl   $0x1,0x8049a80
 8048760:	00 00 00 
 8048763:	89 ec                	mov    %ebp,%esp
 8048765:	5d                   	pop    %ebp
 8048766:	c3                   	ret    
 8048767:	89 f6                	mov    %esi,%esi
 8048769:	8d bc 27 00 00 00 00 	lea    0x0(%edi,1),%edi

08048770 <fini_dummy>:
 8048770:	55                   	push   %ebp
 8048771:	89 e5                	mov    %esp,%ebp
 8048773:	83 ec 08             	sub    $0x8,%esp
 8048776:	89 ec                	mov    %ebp,%esp
 8048778:	5d                   	pop    %ebp
 8048779:	c3                   	ret    
 804877a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048780 <frame_dummy>:
 8048780:	55                   	push   %ebp
 8048781:	89 e5                	mov    %esp,%ebp
 8048783:	83 ec 08             	sub    $0x8,%esp
 8048786:	c7 45 fc 00 00 00 00 	movl   $0x0,0xfffffffc(%ebp)
 804878d:	e8 00 00 00 00       	call   8048792 <frame_dummy+0x12>
 8048792:	5a                   	pop    %edx
 8048793:	81 c2 ae 12 00 00    	add    $0x12ae,%edx
 8048799:	89 d0                	mov    %edx,%eax
 804879b:	89 45 f8             	mov    %eax,0xfffffff8(%ebp)
 804879e:	b8 78 86 04 08       	mov    $0x8048678,%eax
 80487a3:	85 c0                	test   %eax,%eax
 80487a5:	74 18                	je     80487bf <frame_dummy+0x3f>
 80487a7:	ff 75 f8             	pushl  0xfffffff8(%ebp)
 80487aa:	ff 75 fc             	pushl  0xfffffffc(%ebp)
 80487ad:	68 84 9a 04 08       	push   $0x8049a84
 80487b2:	68 d4 98 04 08       	push   $0x80498d4
 80487b7:	e8 bc fe ff ff       	call   8048678 <_init+0x80>
 80487bc:	83 c4 10             	add    $0x10,%esp
 80487bf:	89 ec                	mov    %ebp,%esp
 80487c1:	5d                   	pop    %ebp
 80487c2:	c3                   	ret    
 80487c3:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 80487c9:	8d bc 27 00 00 00 00 	lea    0x0(%edi,1),%edi

080487d0 <init_dummy>:
 80487d0:	55                   	push   %ebp
 80487d1:	89 e5                	mov    %esp,%ebp
 80487d3:	83 ec 08             	sub    $0x8,%esp
 80487d6:	89 ec                	mov    %ebp,%esp
 80487d8:	5d                   	pop    %ebp
 80487d9:	c3                   	ret    
 80487da:	90                   	nop    
 80487db:	90                   	nop    
 80487dc:	90                   	nop    
 80487dd:	90                   	nop    
 80487de:	90                   	nop    
 80487df:	90                   	nop    

080487e0 <main>:
 80487e0:	55                   	push   %ebp
 80487e1:	89 e5                	mov    %esp,%ebp
 80487e3:	83 ec 18             	sub    $0x18,%esp
 80487e6:	83 e4 f0             	and    $0xfffffff0,%esp
 80487e9:	c7 45 fc 00 00 00 00 	movl   $0x0,0xfffffffc(%ebp)
 80487f0:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 80487f3:	ff 00                	incl   (%eax)
 80487f5:	83 7d fc 01          	cmpl   $0x1,0xfffffffc(%ebp)
 80487f9:	75 36                	jne    8048831 <main+0x51>
 80487fb:	83 ec 0c             	sub    $0xc,%esp
 80487fe:	6a 04                	push   $0x4
 8048800:	e8 a3 fe ff ff       	call   80486a8 <_init+0xb0>
 8048805:	83 c4 10             	add    $0x10,%esp
 8048808:	c7 00 bc 0a 00 00    	movl   $0xabc,(%eax)
 804880e:	83 ec 04             	sub    $0x4,%esp
 8048811:	6a 00                	push   $0x0
 8048813:	68 78 9a 04 08       	push   $0x8049a78
 8048818:	50                   	push   %eax
 8048819:	e8 4a fe ff ff       	call   8048668 <_init+0x70>
 804881e:	89 f6                	mov    %esi,%esi
 8048820:	83 ec 0c             	sub    $0xc,%esp
 8048823:	50                   	push   %eax
 8048824:	e8 6f fe ff ff       	call   8048698 <_init+0xa0>
 8048829:	83 c4 10             	add    $0x10,%esp
 804882c:	e8 17 fe ff ff       	call   8048648 <_init+0x50>
 8048831:	b8 00 00 00 00       	mov    $0x0,%eax
 8048836:	89 ec                	mov    %ebp,%esp
 8048838:	5d                   	pop    %ebp
 8048839:	c3                   	ret    
 804883a:	90                   	nop    
 804883b:	90                   	nop    
 804883c:	90                   	nop    
 804883d:	90                   	nop    
 804883e:	90                   	nop    
 804883f:	90                   	nop    

08048840 <__do_global_ctors_aux>:
 8048840:	55                   	push   %ebp
 8048841:	89 e5                	mov    %esp,%ebp
 8048843:	83 ec 08             	sub    $0x8,%esp
 8048846:	b8 34 9a 04 08       	mov    $0x8049a34,%eax
 804884b:	83 e8 04             	sub    $0x4,%eax
 804884e:	89 45 fc             	mov    %eax,0xfffffffc(%ebp)
 8048851:	eb 0d                	jmp    8048860 <__do_global_ctors_aux+0x20>
 8048853:	90                   	nop    
 8048854:	90                   	nop    
 8048855:	90                   	nop    
 8048856:	90                   	nop    
 8048857:	90                   	nop    
 8048858:	90                   	nop    
 8048859:	90                   	nop    
 804885a:	90                   	nop    
 804885b:	90                   	nop    
 804885c:	90                   	nop    
 804885d:	90                   	nop    
 804885e:	90                   	nop    
 804885f:	90                   	nop    
 8048860:	8b 45 fc             	mov    0xfffffffc(%ebp),%eax
 8048863:	83 38 ff             	cmpl   $0xffffffff,(%eax)
 8048866:	75 08                	jne    8048870 <__do_global_ctors_aux+0x30>
 8048868:	eb 16                	jmp    8048880 <__do_global_ctors_aux+0x40>
 804886a:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048870:	8b 45 fc             	mov    0xfffffffc(%ebp),%eax
 8048873:	8b 00                	mov    (%eax),%eax
 8048875:	ff d0                	call   *%eax
 8048877:	8d 45 fc             	lea    0xfffffffc(%ebp),%eax
 804887a:	83 28 04             	subl   $0x4,(%eax)
 804887d:	eb e1                	jmp    8048860 <__do_global_ctors_aux+0x20>
 804887f:	90                   	nop    
 8048880:	89 ec                	mov    %ebp,%esp
 8048882:	5d                   	pop    %ebp
 8048883:	c3                   	ret    
 8048884:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 804888a:	8d bf 00 00 00 00    	lea    0x0(%edi),%edi

08048890 <init_dummy>:
 8048890:	55                   	push   %ebp
 8048891:	89 e5                	mov    %esp,%ebp
 8048893:	83 ec 08             	sub    $0x8,%esp
 8048896:	89 ec                	mov    %ebp,%esp
 8048898:	5d                   	pop    %ebp
 8048899:	c3                   	ret    
 804889a:	90                   	nop    
 804889b:	90                   	nop    
Disassembly of section .fini:

0804889c <_fini>:
 804889c:	55                   	push   %ebp
 804889d:	89 e5                	mov    %esp,%ebp
 804889f:	53                   	push   %ebx
 80488a0:	e8 00 00 00 00       	call   80488a5 <gcc2_compiled.+0x9>
 80488a5:	5b                   	pop    %ebx
 80488a6:	81 c3 9b 11 00 00    	add    $0x119b,%ebx
 80488ac:	e8 4f fe ff ff       	call   8048700 <__do_global_dtors_aux>
 80488b1:	8b 5d fc             	mov    0xfffffffc(%ebp),%ebx
 80488b4:	c9                   	leave  
 80488b5:	c3                   	ret    
Disassembly of section .rodata:

080488b8 <_IO_stdin_used-0x4>:
 80488b8:	03 00                	add    (%eax),%eax
	...

080488bc <_IO_stdin_used>:
 80488bc:	01 00                	add    %eax,(%eax)
 80488be:	02 00                	add    (%eax),%al
Disassembly of section .data:

080498c0 <__data_start>:
 80498c0:	00 00                	add    %al,(%eax)
	...

080498c4 <__dso_handle>:
 80498c4:	00 00                	add    %al,(%eax)
	...

080498c8 <p.0>:
 80498c8:	3c 9a                	cmp    $0x9a,%al
 80498ca:	04 08                	add    $0x8,%al

080498cc <force_to_data>:
 80498cc:	00 00                	add    %al,(%eax)
	...

080498d0 <force_to_data>:
 80498d0:	00 00                	add    %al,(%eax)
	...
Disassembly of section .eh_frame:

080498d4 <__EH_FRAME_BEGIN__>:
 80498d4:	18 00                	sbb    %al,(%eax)
 80498d6:	00 00                	add    %al,(%eax)
 80498d8:	00 00                	add    %al,(%eax)
 80498da:	00 00                	add    %al,(%eax)
 80498dc:	01 7a 50             	add    %edi,0x50(%edx)
 80498df:	4c                   	dec    %esp
 80498e0:	00 01                	add    %al,(%ecx)
 80498e2:	7c 08                	jl     80498ec <__EH_FRAME_BEGIN__+0x18>
 80498e4:	06                   	push   %es
 80498e5:	00 58 86             	add    %bl,0xffffff86(%eax)
 80498e8:	04 08                	add    $0x8,%al
 80498ea:	00 0c 04             	add    %cl,(%esp,%eax,1)
 80498ed:	04 88                	add    $0x88,%al
 80498ef:	01 30                	add    %esi,(%eax)
 80498f1:	00 00                	add    %al,(%eax)
 80498f3:	00 20                	add    %ah,(%eax)
 80498f5:	00 00                	add    %al,(%eax)
 80498f7:	00 e0                	add    %ah,%al
 80498f9:	87 04 08             	xchg   %eax,(%eax,%ecx,1)
 80498fc:	5a                   	pop    %edx
 80498fd:	00 00                	add    %al,(%eax)
 80498ff:	00 04 28             	add    %al,(%eax,%ebp,1)
 8049902:	99                   	cltd   
 8049903:	04 08                	add    $0x8,%al
 8049905:	04 01                	add    $0x1,%al
 8049907:	00 00                	add    %al,(%eax)
 8049909:	00 0e                	add    %cl,(%esi)
 804990b:	08 85 02 04 02 00    	or     %al,0x20402(%ebp)
 8049911:	00 00                	add    %al,(%eax)
 8049913:	0d 05 04 1d 00       	or     $0x1d0405,%eax
 8049918:	00 00                	add    %al,(%eax)
 804991a:	2e 10 04 2c          	adc    %al,%cs:(%esp,%ebp,1)
 804991e:	00 00                	add    %al,(%eax)
 8049920:	00 2e                	add    %ch,(%esi)
	...

08049924 <__FRAME_END__>:
 8049924:	00 00                	add    %al,(%eax)
	...
Disassembly of section .gcc_except_table:

08049928 <.gcc_except_table>:
 8049928:	ff 00                	incl   (%eax)
 804992a:	25 03 1a 39 00       	and    $0x391a03,%eax
 804992f:	00 00                	add    %al,(%eax)
 8049931:	05 00 00 00 40       	add    $0x40000000,%eax
 8049936:	00 00                	add    %al,(%eax)
 8049938:	00 01                	add    %al,(%ecx)
 804993a:	4c                   	dec    %esp
 804993b:	00 00                	add    %al,(%eax)
 804993d:	00 05 00 00 00 00    	add    %al,0x0
 8049943:	00 00                	add    %al,(%eax)
 8049945:	00 00                	add    %al,(%eax)
 8049947:	01 00                	add    %eax,(%eax)
 8049949:	00 00                	add    %al,(%eax)
 804994b:	00 00                	add    %al,(%eax)
 804994d:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dynamic:

08049950 <.dynamic>:
 8049950:	01 00                	add    %eax,(%eax)
 8049952:	00 00                	add    %al,(%eax)
 8049954:	01 00                	add    %eax,(%eax)
 8049956:	00 00                	add    %al,(%eax)
 8049958:	01 00                	add    %eax,(%eax)
 804995a:	00 00                	add    %al,(%eax)
 804995c:	c8 00 00 00          	enter  $0x0,$0x0
 8049960:	01 00                	add    %eax,(%eax)
 8049962:	00 00                	add    %al,(%eax)
 8049964:	d2 00                	rolb   %cl,(%eax)
 8049966:	00 00                	add    %al,(%eax)
 8049968:	01 00                	add    %eax,(%eax)
 804996a:	00 00                	add    %al,(%eax)
 804996c:	57                   	push   %edi
 804996d:	01 00                	add    %eax,(%eax)
 804996f:	00 0c 00             	add    %cl,(%eax,%eax,1)
 8049972:	00 00                	add    %al,(%eax)
 8049974:	f8                   	clc    
 8049975:	85 04 08             	test   %eax,(%eax,%ecx,1)
 8049978:	0d 00 00 00 9c       	or     $0x9c000000,%eax
 804997d:	88 04 08             	mov    %al,(%eax,%ecx,1)
 8049980:	04 00                	add    $0x0,%al
 8049982:	00 00                	add    %al,(%eax)
 8049984:	28 81 04 08 05 00    	sub    %al,0x50804(%ecx)
 804998a:	00 00                	add    %al,(%eax)
 804998c:	68 83 04 08 06       	push   $0x6080483
 8049991:	00 00                	add    %al,(%eax)
 8049993:	00 d8                	add    %bl,%al
 8049995:	81 04 08 0a 00 00 00 	addl   $0xa,(%eax,%ecx,1)
 804999c:	b3 01                	mov    $0x1,%bl
 804999e:	00 00                	add    %al,(%eax)
 80499a0:	0b 00                	or     (%eax),%eax
 80499a2:	00 00                	add    %al,(%eax)
 80499a4:	10 00                	adc    %al,(%eax)
 80499a6:	00 00                	add    %al,(%eax)
 80499a8:	15 00 00 00 00       	adc    $0x0,%eax
 80499ad:	00 00                	add    %al,(%eax)
 80499af:	00 03                	add    %al,(%ebx)
 80499b1:	00 00                	add    %al,(%eax)
 80499b3:	00 40 9a             	add    %al,0xffffff9a(%eax)
 80499b6:	04 08                	add    $0x8,%al
 80499b8:	02 00                	add    (%eax),%al
 80499ba:	00 00                	add    %al,(%eax)
 80499bc:	48                   	dec    %eax
 80499bd:	00 00                	add    %al,(%eax)
 80499bf:	00 14 00             	add    %dl,(%eax,%eax,1)
 80499c2:	00 00                	add    %al,(%eax)
 80499c4:	11 00                	adc    %eax,(%eax)
 80499c6:	00 00                	add    %al,(%eax)
 80499c8:	17                   	pop    %ss
 80499c9:	00 00                	add    %al,(%eax)
 80499cb:	00 b0 85 04 08 11    	add    %dh,0x11080485(%eax)
 80499d1:	00 00                	add    %al,(%eax)
 80499d3:	00 a0 85 04 08 12    	add    %ah,0x12080485(%eax)
 80499d9:	00 00                	add    %al,(%eax)
 80499db:	00 10                	add    %dl,(%eax)
 80499dd:	00 00                	add    %al,(%eax)
 80499df:	00 13                	add    %dl,(%ebx)
 80499e1:	00 00                	add    %al,(%eax)
 80499e3:	00 08                	add    %cl,(%eax)
 80499e5:	00 00                	add    %al,(%eax)
 80499e7:	00 fe                	add    %bh,%dh
 80499e9:	ff                   	(bad)  
 80499ea:	ff 6f 50             	ljmp   *0x50(%edi)
 80499ed:	85 04 08             	test   %eax,(%eax,%ecx,1)
 80499f0:	ff                   	(bad)  
 80499f1:	ff                   	(bad)  
 80499f2:	ff 6f 02             	ljmp   *0x2(%edi)
 80499f5:	00 00                	add    %al,(%eax)
 80499f7:	00 f0                	add    %dh,%al
 80499f9:	ff                   	(bad)  
 80499fa:	ff 6f 1c             	ljmp   *0x1c(%edi)
 80499fd:	85 04 08             	test   %eax,(%eax,%ecx,1)
	...
Disassembly of section .ctors:

08049a30 <__CTOR_LIST__>:
 8049a30:	ff                   	(bad)  
 8049a31:	ff                   	(bad)  
 8049a32:	ff                   	(bad)  
 8049a33:	ff 00                	incl   (%eax)

08049a34 <__CTOR_END__>:
 8049a34:	00 00                	add    %al,(%eax)
	...
Disassembly of section .dtors:

08049a38 <__DTOR_LIST__>:
 8049a38:	ff                   	(bad)  
 8049a39:	ff                   	(bad)  
 8049a3a:	ff                   	(bad)  
 8049a3b:	ff 00                	incl   (%eax)

08049a3c <__DTOR_END__>:
 8049a3c:	00 00                	add    %al,(%eax)
	...
Disassembly of section .got:

08049a40 <.got>:
 8049a40:	50                   	push   %eax
 8049a41:	99                   	cltd   
 8049a42:	04 08                	add    $0x8,%al
	...
 8049a4c:	3e 86 04 08          	xchg   %al,%ds:(%eax,%ecx,1)
 8049a50:	4e                   	dec    %esi
 8049a51:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049a54:	5e                   	pop    %esi
 8049a55:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049a58:	6e                   	outsb  %ds:(%esi),(%dx)
 8049a59:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049a5c:	7e 86                	jle    80499e4 <_DYNAMIC+0x94>
 8049a5e:	04 08                	add    $0x8,%al
 8049a60:	8e 86 04 08 9e 86    	movl   0x869e0804(%esi),%es
 8049a66:	04 08                	add    $0x8,%al
 8049a68:	ae                   	scas   %es:(%edi),%al
 8049a69:	86 04 08             	xchg   %al,(%eax,%ecx,1)
 8049a6c:	be 86 04 08 00       	mov    $0x80486,%esi
 8049a71:	00 00                	add    %al,(%eax)
	...
