# This makefile was generated by autochaos 0.3.0. Please do not
# tamper with it unless you are very certain about what you are doing.

ALL_ARGUMENTS = 

PREFIX = /mnt/chaos
PACKAGE = storm


# Compiler flags.

CFLAGS = -Wall -W -Wshadow -Wpointer-arith -Waggregate-return \
-Wstrict-prototypes -Wredundant-decls -Winline -Wmissing-prototypes \
-Wcast-align -Wbad-function-cast -Wsign-compare \
-Wmissing-declarations -Wmissing-noreturns -pipe \
-Wnested-externs -O3 -fno-builtin -funsigned-char -g -fomit-frame-pointer -ffreestanding $(EXTRA_CFLAGS) $(DEFINES)

# Linker extra flags
EXTRA_LDFLAGS = 

INCLUDES = -I../../Include

OBJECTS = mount.o common.o string.o fcb.o direntry.o dirwr.o create.o \
    read_write.o low_fat.o low_fat12.o low_fat16.o low_fat32.o cache.o \
    block_io.o interface.o

SOURCES = mount.c common.c string.c fcb.c direntry.c dirwr.c create.c \
    read_write.c low_fat.c low_fat12.c low_fat16.c low_fat32.c cache.c \
    block_io.c interface.c

LIBS = 

MOBJECTS = mount.o common.o string.o fcb.o direntry.o dirwr.o create.o \
    read_write.o low_fat.o low_fat12.o low_fat16.o low_fat32.o cache.o \
    block_io.o interface.o interface_module.o

MSOURCES = mount.c common.c string.c fcb.c direntry.c dirwr.c create.c \
    read_write.c low_fat.c low_fat12.c low_fat16.c low_fat32.c cache.c \
    block_io.c interface.c interface_module.c

MLIBS = \
../../Libraries/string/string.a \
../../Libraries/unicode/unicode.a \
../../Libraries/pool_of_integers/pool_of_integers.a \
../../Libraries/hash_table/hash_table.a

HEADER_PATH = $(PREFIX)/data/programming/c/headers/$(PACKAGE)/ia32

# TODO: Those should be overridable.

CC = gcc
NASM = nasm
AR = ar
RANLIB = ranlib
GZIP = gzip -f

%.o: %.c
	@echo Compiling $<...
	@$(CC) -o $(@) $(CFLAGS) $(INCLUDES) $(DEFS) -c $<

%.o: %.S
	@echo Compiling $<...
	@$(CC) -o $(@) $(CFLAGS) $(INCLUDES) $(DEFS) -c $<

%.o: %.asm
	$(NASM) -o $(@) $< -f elf

.PHONY: splash all clean install package-source package-check package




all: splash makefile  $(OBJECTS)

clean:
	rm -f $(OBJECTS)
	rm -f *.dep
	rm -f vfat.a
	rm -f vfat.so
	
splash:


vfat.a: $(OBJECTS)
	@echo "Linking..."
	ar cru $(@) $(OBJECTS) $(LIBS)
	ranlib $(@)

vfat.so: $(MOBJECTS)
	@echo "Linking..."
	ld -o $(@) -shared $(MOBJECTS) $(MLIBS)

all: vfat.a vfat.so

rall: clean all

install: all

